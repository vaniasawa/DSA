/*
Write an algorithm to determine if a number n is a happy number.

We use the following process to check if a given number is a happy number:

Starting with the given number n, replace the number with the sum of the squares of its digits.
Repeat the process until:
- The number equals 1, which will depict that the given number n is a happy number.
- It enters a cycle, which will depict that the given number n is not a happy number.

Return TRUE if n is a happy number, and FALSE if not.
*/

def sum_of_squares(n: int):
    sum_squares = 0
    str_n = str(n)
    for i in range(len(str_n)):
        sum_squares += int(str_n[i])**2
    return sum_squares

def is_happy_number(n: int):
    slow_pointer = n
    fast_pointer = sum_of_squares(n)
    while (fast_pointer != 1) and (slow_pointer != fast_pointer):
        slow_pointer = sum_of_squares(slow_pointer)
        fast_pointer = sum_of_squares(sum_of_squares(fast_pointer))
    
    if fast_pointer == 1:
        return True
    return False 
        
