/*
https://leetcode.com/problems/squares-of-a-sorted-array/

Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.

Example 1:
Input: nums = [-4,-1,0,3,10]
Output: [0,1,9,16,100]
Explanation: After squaring, the array becomes [16,1,0,9,100]. After sorting, it becomes [0,1,9,16,100].

Example 2:
Input: nums = [-7,-3,2,3,11]
Output: [4,9,9,49,121]

Constraints:

1 <= nums.length <= 104
-104 <= nums[i] <= 104
nums is sorted in non-decreasing order.
*/

class Solution(object):
    def sortedSquares(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        sorted_list = [0] * len(nums)
        pointer_to_list = len(sorted_list) - 1
        i, j = 0, len(nums) - 1
        while i < j:
            if nums[i]**2 <= nums[j]**2:
                sorted_list[pointer_to_list] = nums[j]**2
                pointer_to_list -= 1
                j -= 1
            else:
                sorted_list[pointer_to_list] = nums[i]**2
                pointer_to_list -= 1
                i += 1
        sorted_list[pointer_to_list] = nums[j]**2
        return sorted_list