/*
Given a singly linked list, remove the nth node from the end of the list and return its head.
*/

from linked_list import LinkedList
from linked_list_node import LinkedListNode

def remove_nth_last_node(head, n):
    left = right = head 
    for _ in range(n):
        right = right.next
    
    ## right can become None here! Especially if we traverse till the end of the linked list
    ## hence, n = length of the linked list, so we want to remove the first element of the linked list and return the remainder of the array

    ## Base Case
    if right == None:
        return head.next
    
    while right and right.next: #Doesn't account for right being None
        left = left.next
        right = right.next 

    left.next = left.next.next
    return head